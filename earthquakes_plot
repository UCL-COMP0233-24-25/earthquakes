from datetime import date

import matplotlib.pyplot as plt
import json
import requests


def get_data():
     # With requests, we can ask the web service for the data.
    # Can you understand the parameters we are passing here?
    response = requests.get(
        "http://earthquake.usgs.gov/fdsnws/event/1/query.geojson",
        params={
            'starttime': "2000-01-01",
            "maxlatitude": "58.723",
            "minlatitude": "50.008",
            "maxlongitude": "1.67",
            "minlongitude": "-9.756",
            "minmagnitude": "1",
            "endtime": "2018-10-11",
            "orderby": "time-asc"}
    )

    text = response.text
    data = None
    with open("response.json","w") as file:
        file.write(text)

    data = json.loads(text)
    return data


def get_year(earthquake):
    """Extract the year in which an earthquake happened."""
    timestamp = earthquake['properties']['time']
    # The time is given in a strange-looking but commonly-used format.
    # To understand it, we can look at the documentation of the source data:
    # https://earthquake.usgs.gov/data/comcat/index.php#time
    # Fortunately, Python provides a way of interpreting this timestamp:
    # (Question for discussion: Why do we divide by 1000?)
    year = date.fromtimestamp(timestamp/1000).year
    return year


def get_magnitude(earthquake):
    """Retrive the magnitude of an earthquake item."""
    return earthquake['properties']['mag']


# This is function you may want to create to break down the computations,
# although it is not necessary. You may also change it to something different.
#def get_magnitudes_per_year(earthquakes):
    """Retrieve the magnitudes of all the earthquakes in a given year.
    
    Returns a dictionary with years as keys, and lists of magnitudes as values.
    """
    ...

def get_magnitudes_per_year(earthquakes):
    magnitudes_per_year = {}
    
    for quake in earthquakes:
        year = get_year(quake)
        magnitude = get_magnitude(quake)
        
        if year not in magnitudes_per_year:
            magnitudes_per_year[year] = []
        
        magnitudes_per_year[year].append(magnitude)
    
    return magnitudes_per_year

def plot_average_magnitude_per_year(earthquakes):
   return sum(earthquakes['mag'])/len(earthquakes['mag'])


def plot_number_per_year(earthquakes):
    magnitudes_per_year = get_magnitudes_per_year(earthquakes)
    years = sorted(magnitudes_per_year.keys())
    counts = [len(magnitudes_per_year[year]) for year in years]
    
    plt.figure(figsize=(10, 5))
    plt.bar(years, counts, color='orange')
    plt.title('Number of Earthquakes per Year')
    plt.xlabel('Year')
    plt.ylabel('Number of Earthquakes')
    plt.xticks(years, rotation=45)
    plt.grid(axis='y')
    plt.show()



# Get the data we will work with
quakes = get_data()['features']

# Plot the results - this is not perfect since the x axis is shown as real
# numbers rather than integers, which is what we would prefer!
plot_number_per_year(quakes)
plt.clf()  # This clears the figure, so that we don't overlay the two plots
plot_average_magnitude_per_year(quakes)
